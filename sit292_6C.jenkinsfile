pipeline{
    agent any
    environment {
        DIRECTORY_PATH= "/Users/michaelwiedermann/DEV/sit223_prof_prac/Task6.2C"
        FRONTEND_PACKAGE_MANAGER= "Yarn."
        BUILD_AUTOMATION= "Gradle."
        UNIT_TESTING= "JUnit."
        INTEGRATION_TESTING= "Jasmine."
        CODE_ANALYSIS= "SonarQube."
        SECURITY_SCAN= "Veracode."
        STAGING_ENVIRONMENT= "AWS EC2 Staging Instance."
        PRODUCTION_ENVIRONMENT= "AWS EC2 Production Server."
    }
    stages{
        stage("1: Build"){
            steps{
                echo "======== Executing Build Phase ========"
                echo "Fetching the source code from the directory: $DIRECTORY_PATH"
                echo "Running the Frontend Package Manager $FRONTEND_PACKAGE_MANAGER"
                echo "Building the project with $BUILD_AUTOMATION"
            }
            post{
                success{
                    mail to: "mick.wiedermann@gmail.com",
                    subject: "Bulid Successful!",
                    body: "\nThe application build has been successful..."
                }
                failure{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Bulid Failed!",
                        body: "\nThe build has failed, check the attached log to troubleshoot the problem."
                }
            }
        }
        stage("2: Unit & Intergration Tests"){
            steps{
                echo "======== Executing Test Phase ========"
                echo " Performing Unit Tests with $UNIT_TESTING"
                echo " Performing Intergration Tests with $INTEGRATION_TESTING"
            }
            post{
                success{
                    mail to: "mick.wiedermann@gmail.com",
                    subject: "Unit & Intergration Tests Passed!",
                    body: "\nThe application has successfuly passed the Unit & Intergration Tests."
                }
                failure{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Unit & Intergration Tests Failed!",
                        body: "\nThe build has failed the Unit & Intergration Tests. Check the attached log to troubleshoot the problem."
                }
            }
        }
        stage("3: Code Analysis"){
            steps{
                echo "======== Executing Code Analysis ========"
                echo "Conducting code analysis with $CODE_ANALYSIS"
            }
            post{
                success{
                    mail to: "mick.wiedermann@gmail.com",
                    subject: "Code Analysis Passed!",
                    body: "\nThe application has passed the Code Analysis..."
                }
                failure{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Code Analysis Failed!",
                        body: "\nThe application has failed the Code Analysis, check the attached log to troubleshoot the problem."
                }
            }
        }
        stage("4: Security Scan"){
            steps{
                echo "======== Executing Security Scan ========"
                echo "Running a Security Scan with $SECURITY_SCAN"
            }
            post{
                success{
                    mail to: "mick.wiedermann@gmail.com",
                    subject: "Security Scan Successful!",
                    body: "\nThe application has passed the Security Scan..."
                }
                failure{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Security Scan Failed!",
                        body: "\nThe Security Scan has failed, check the attached log to troubleshoot the problem."
                }
            }
        }
        stage("5: Deploy to Staging"){
            steps{
                echo "======== Deploying to the Staging Environment ========"
                echo "Deploying to the staging environment $STAGING_ENVIRONMENT"
            }
            post{
                success{
                    mail to: "mick.wiedermann@gmail.com",
                    subject: "Successfully Deployed to Staging!",
                    body: "\nThe application has been successfully deployed to the satging environemnt..."
                }
                failure{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Deployment to Staging Failed!",
                        body: "\nThe deployment to staging has failed, check the attached log to troubleshoot the problem."
                }
            }
        }
        stage("6: Intergration Tests in Staging"){
            steps{
                echo "======== Executing Intergration Tests on Staging ========"
                echo "Performing Intergration Tests with $INTEGRATION_TESTING in the staging environment"
            }
            post{
                success{
                    mail to: "mick.wiedermann@gmail.com",
                    subject: "Intergration Tests on Staging Passed!",
                    body: "\nThe application has successfully passed the Intergration Tests in the Staging environment..."
                }
                failure{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Intergration Tests in Staging Failed!",
                        body: "\nThe Intergration Tests in Staging have failed, check the attached log to troubleshoot the problem."
                }
            }
        }
        stage("7: Deploy to Production"){
            steps{
                echo "======== Deploying to Production ========"
                echo "Deployed to $PRODUCTION_ENVIRONMENT"
            }
            post{
                success{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Deployment to Production Successful!",
                        body: "\nThe application has been Deployed to Production! Congrats!"
                }
                failure{
                    emailext attachLog: true,
                        to: "mick.wiedermann@gmail.com",
                        subject: "Deployment to Prod Failed!",
                        body: "\nThe Deployment to production has failed, check the attached log to troubleshoot the problem."
                }
            }
        }
    }
    post{
        always{
            echo "======== Pipeline Executed Succsessfully========"
        }
    }
}
